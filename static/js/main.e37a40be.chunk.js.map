{"version":3,"sources":["index.js"],"names":["Box","selectBox","_this","props","row","col","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","this","boxClass","id","onClick","React","Component","Grid","width","cols","rowsArr","i","rows","j","boxId","gridFull","push","key","style","Buttons","handleSelect","evt","_this2","gridSize","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","playButton","pauseButton","clear","slow","fast","seed","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","title","onSelect","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","eventKey","Main","_this3","Object","_Users_ericgrieshaber_pluralsight_game_of_life_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_ericgrieshaber_pluralsight_game_of_life_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_ericgrieshaber_pluralsight_game_of_life_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","gridCopy","arrayClone","state","setState","clearInterval","intervalId","setInterval","play","speed","grid","Array","fill","map","generation","size","g","g2","count","Math","floor","random","arr","JSON","parse","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e37a40be.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ButtonToolbar, DropdownItem, DropdownButton } from 'react-bootstrap';\n\nclass Box extends React.Component {\n  selectBox = () => {\n    this.props.selectBox(this.props.row, this.props.col);\n  }\n\n  render() {\n    return (\n      <div\n        className={this.props.boxClass}\n        id={this.props.id}\n        onClick={this.selectBox}\n      />\n    );\n  }\n}\n\nclass Grid extends React.Component {\n  render() {\n    const width = (this.props.cols * 14);\n    // const height = (this.props.rows * 3);\n    var rowsArr = [];\n\n    var boxClass = \"\";\n    for (var i = 0; i < this.props.rows; i++) {\n      for (var j = 0; j < this.props.cols; j++) {\n        let boxId = i + \"_\" + j;\n\n        boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box off\";\n        rowsArr.push(\n          <Box\n            boxClass={boxClass}\n            key={boxId}\n            boxId={boxId}\n            row={i}\n            col={j}\n            selectBox={this.props.selectBox}\n          />\n        );\n      }\n    }\n\n    return (\n      <div className=\"grid\" style={{width: width}}>\n        {rowsArr}\n      </div>\n    );\n  }\n}\n\nclass Buttons extends React.Component {\n\n  handleSelect = (evt) => {\n    this.props.gridSize(evt);\n  }\n  render() {\n    return (\n      <div className=\"center\">\n        <ButtonToolbar>\n          <button className=\"btn btn-deafult\" onClick={this.props.playButton}>\n            Play\n          </button>\n          <button className=\"btn btn-deafult\" onClick={this.props.pauseButton}>\n            Pause\n          </button>\n          <button className=\"btn btn-deafult\" onClick={this.props.clear}>\n            Clear\n          </button>\n          <button className=\"btn btn-deafult\" onClick={this.props.slow}>\n            Slow\n          </button>\n          <button className=\"btn btn-deafult\" onClick={this.props.fast}>\n            Fast\n          </button>\n          <button className=\"btn btn-deafult\" onClick={this.props.seed}>\n            Seed\n          </button>\n          <DropdownButton\n            title=\"Grid Size\"\n            id=\"size-menu\"\n            onSelect={this.handleSelect}\n          >\n            <DropdownItem eventKey=\"1\">20x10</DropdownItem>\n            <DropdownItem eventKey=\"2\">50x30</DropdownItem>\n            <DropdownItem eventKey=\"3\">75x50</DropdownItem>\n          </DropdownButton>\n        </ButtonToolbar>\n      </div>\n    )\n  }\n}\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n    this.speed = 100;\n    this.rows = 30;\n    this.cols = 50;\n\n    this.state = {\n      generation: 0,\n      gridFull: Array(this.rows).fill().map(() => Array(this.cols).fill(false))\n    }\n  }\n\n  // this function allows user to select box\n  selectBox = (row, col) => {\n    let gridCopy = arrayClone(this.state.gridFull);\n    gridCopy[row][col] = !gridCopy[row][col];\n    this.setState({\n      gridFull: gridCopy\n    });\n  }\n\n  playButton = () => {\n    clearInterval(this.intervalId)\n    this.intervalId = setInterval(this.play, this.speed);\n  }\n\n  pauseButton = () => {\n    clearInterval(this.intervalId);\n  }\n\n  slow = () => {\n    this.speed = 1000;\n    this.playButton();\n  }\n\n  fast = () => {\n    this.speed = 100;\n    this.playButton();\n  }\n\n  clear = () => {\n    var grid = Array(this.rows).fill().map(() => Array(this.cols).fill(false));\n    this.setState({\n      gridFull: grid,\n      generation: 0\n    });\n  }\n\n  gridSize = (size) => {\n    switch (size) {\n      case \"1\":\n        this.cols = 20;\n        this.rows = 10;\n      break;\n      case \"2\":\n        this.cols = 50;\n        this.rows = 30;\n      break;\n      default:\n        this.cols = 70;\n        this.rows = 50;\n    }\n    this.clear();\n  }\n\n  play = () => {\n    let g = this.state.gridFull; // g stands for grid\n    let g2 = arrayClone(this.state.gridFull);\n\n    for (let i = 0; i < this.rows; i++) { // this loop cycles through all rows\n\t\t  for (let j = 0; j < this.cols; j++) { // cycles through all cols\n\t\t    let count = 0; // how many neighbors each box has\n        // the next 8 lines check the 8 possible neighbors each box could have\n\t\t    if (i > 0) if (g[i - 1][j]) count++;\n\t\t    if (i > 0 && j > 0) if (g[i - 1][j - 1]) count++;\n\t\t    if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) count++;\n\t\t    if (j < this.cols - 1) if (g[i][j + 1]) count++;\n\t\t    if (j > 0) if (g[i][j - 1]) count++;\n\t\t    if (i < this.rows - 1) if (g[i + 1][j]) count++;\n\t\t    if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) count++;\n\t\t    if (i < this.rows - 1 && j < this.cols - 1) if (g[i + 1][j + 1]) count++;\n        // this line determines if there are < 2 neighbors the box 'dies'\n        if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false;\n        // this line determines if a box has 3 neighbors it becomes 'alive'\n\t\t    if (!g[i][j] && count === 3) g2[i][j] = true;\n\t\t  }\n\t\t}\n    this.setState({\n      gridFull: g2,\n      generation: this.state.generation + 1\n    });\n  }\n\n  // this function seeds the grid with randomly selected boxes\n  seed = () => {\n    let gridCopy = arrayClone(this.state.gridFull);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        if (Math.floor(Math.random() * 4) === 1) {\n          gridCopy[i][j] = true;\n        }\n      }\n    }\n    this.setState({\n      gridFull: gridCopy\n    });\n  }\n\n  componentDidMount() {\n    this.seed();\n    this.playButton();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Dave Public's Game Of Life</h1>\n        <Buttons\n          playButton={this.playButton}\n          pauseButton={this.pauseButton}\n          slow={this.slow}\n          fast={this.fast}\n          clear={this.clear}\n          seed={this.seed}\n          gridSize={this.gridSize}\n        />\n        <Grid\n          gridFull={this.state.gridFull}\n          rows={this.rows}\n          cols={this.cols}\n          selectBox={this.selectBox}\n        />\n        <h2>Generations: {this.state.generation}</h2>\n      </div>\n    )\n  }\n}\n\nfunction arrayClone(arr) {\n  return JSON.parse(JSON.stringify(arr));\n}\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}