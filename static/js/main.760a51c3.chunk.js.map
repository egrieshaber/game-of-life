{"version":3,"sources":["index.js"],"names":["Box","selectBox","_this","props","row","col","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","this","boxClass","id","onClick","React","Component","Grid","width","cols","rowsArr","i","rows","j","boxId","gridFull","push","key","style","Main","_this2","Object","_Users_ericgrieshaber_pluralsight_game_of_life_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_ericgrieshaber_pluralsight_game_of_life_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_ericgrieshaber_pluralsight_game_of_life_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","gridCopy","arrayClone","state","setState","playButton","clearInterval","intervalId","setInterval","play","speed","g","g2","count","generation","seed","Math","floor","random","Array","fill","map","arr","JSON","parse","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.760a51c3.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Box extends React.Component {\n  selectBox = () => {\n    this.props.selectBox(this.props.row, this.props.col);\n  }\n\n  render() {\n    return (\n      <div\n        className={this.props.boxClass}\n        id={this.props.id}\n        onClick={this.selectBox}\n      />\n    );\n  }\n}\n\nclass Grid extends React.Component {\n  render() {\n    const width = (this.props.cols * 16);\n    var rowsArr = [];\n\n    var boxClass = \"\";\n    for (var i = 0; i < this.props.rows; i++) {\n      for (var j = 0; j < this.props.cols; j++) {\n        let boxId = i + \"_\" + j;\n\n        boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box off\";\n        rowsArr.push(\n          <Box\n            boxClass={boxClass}\n            key={boxId}\n            boxId={boxId}\n            row={i}\n            col={j}\n            selectBox={this.props.selectBox}\n          />\n        );\n      }\n    }\n\n    return (\n      <div className=\"grid\" style={{width: width}}>\n        {rowsArr}\n      </div>\n    );\n  }\n}\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n    this.speed = 100;\n    this.rows = 30;\n    this.cols = 50;\n\n    this.state = {\n      generation: 0,\n      gridFull: Array(this.rows).fill().map(() => Array(this.cols).fill(false))\n    }\n  }\n\n  // this function allows user to select box\n  selectBox = (row, col) => {\n    let gridCopy = arrayClone(this.state.gridFull);\n    gridCopy[row][col] = !gridCopy[row][col];\n    this.setState({\n      gridFull: gridCopy\n    });\n  }\n\n  playButton = () => {\n    clearInterval(this.intervalId)\n    this.intervalId = setInterval(this.play, this.speed);\n  }\n\n  play = () => {\n    let g = this.state.gridFull; // g stands for grid\n    let g2 = arrayClone(this.state.gridFull);\n\n    for (let i = 0; i < this.rows; i++) { // this loop cycles through all rows\n\t\t  for (let j = 0; j < this.cols; j++) { // cycles through all cols\n\t\t    let count = 0; // how many neighbors each box has\n        // the next 8 lines check the 8 possible neighbors each box could have\n\t\t    if (i > 0) if (g[i - 1][j]) count++;\n\t\t    if (i > 0 && j > 0) if (g[i - 1][j - 1]) count++;\n\t\t    if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) count++;\n\t\t    if (j < this.cols - 1) if (g[i][j + 1]) count++;\n\t\t    if (j > 0) if (g[i][j - 1]) count++;\n\t\t    if (i < this.rows - 1) if (g[i + 1][j]) count++;\n\t\t    if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) count++;\n\t\t    if (i < this.rows - 1 && j < this.cols - 1) if (g[i + 1][j + 1]) count++;\n        // this line determines if there are < 2 neighbors the box 'dies'\n        if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false;\n        // this line determines if a box has 3 neighbors it becomes 'alive'\n\t\t    if (!g[i][j] && count === 3) g2[i][j] = true;\n\t\t  }\n\t\t}\n    this.setState({\n      gridFull: g2,\n      generation: this.state.generation + 1\n    });\n  }\n\n  // this function seeds the grid with randomly selected boxes\n  seed = () => {\n    let gridCopy = arrayClone(this.state.gridFull);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        if (Math.floor(Math.random() * 4) === 1) {\n          gridCopy[i][j] = true;\n        }\n      }\n    }\n    this.setState({\n      gridFull: gridCopy\n    });\n  }\n\n  componentDidMount() {\n    this.seed();\n    this.playButton();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>The Game Of Life</h1>\n        <Grid\n          gridFull={this.state.gridFull}\n          rows={this.rows}\n          cols={this.cols}\n          selectBox={this.selectBox}\n        />\n        <h2>Generations: {this.state.generation}</h2>\n      </div>\n    )\n  }\n}\n\nfunction arrayClone(arr) {\n  return JSON.parse(JSON.stringify(arr));\n}\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}